service: be-more-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: eu-west-1
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  # environment: ${file(env.yml):${self:provider.stage}}

  # 'iamRoleStatements' defines the permission policy for the Lambda  function.
  # In this case Lambda functions are granted with permissions to  access DynamoDB.
iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
Resource: "arn:aws:dynamodb:eu-west-1:*:*"

functions:
  create-user:
    handler: create-user.main
    events:
      - http:
          path: users
          method: post
          cors: true
          authorizer: aws_iam

  get-user:
    handler: get-user.main
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list-users:
    handler: list-users.main
    events:
      - http:
          path: users
          method: get
          cors: true
          authorizer: aws_iam

  update-user:
    handler: update-user.main
    events:
      - http:
          path: users
          method: put
          cors: true
          authorizer: aws_iam

  delete-user:
    handler: delete-user.main
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
          authorizer: aws_iam